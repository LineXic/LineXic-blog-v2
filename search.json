[{"title":"再见2024 - 第一次写一篇年终总结","path":"/2024/12/29/2024周年总结/","content":"前言看到身边的朋友都已经开始着手写年终总结想到自己的站点也 function siteTime(){ window.setTimeout(\"siteTime()\", 1000); var seconds = 1000; var minutes = seconds * 60; var hours = minutes * 60; var days = hours * 24; var years = days * 365; var today = new Date(); var todayYear = today.getFullYear(); var todayMonth = today.getMonth()+1; var todayDate = today.getDate(); var todayHour = today.getHours(); var todayMinute = today.getMinutes(); var todaySecond = today.getSeconds(); /* Date.UTC() -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳) year - 作为date对象的年份，为4位年份值 month - 0-11之间的整数，做为date对象的月份 day - 1-31之间的整数，做为date对象的天数 hours - 0(午夜24点)-23之间的整数，做为date对象的小时数 minutes - 0-59之间的整数，做为date对象的分钟数 seconds - 0-59之间的整数，做为date对象的秒数 microseconds - 0-999之间的整数，做为date对象的毫秒数 */ var t1 = Date.UTC(2023,09,02,00,00,00); //北京时间2016-12-1 00:00:00 var t2 = Date.UTC(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond); var diff = t2-t1; var diffYears = Math.floor(diff/years); var diffDays = Math.floor((diff/days)-diffYears*365); var diffHours = Math.floor((diff-(diffYears*365+diffDays)*days)/hours); var diffMinutes = Math.floor((diff-(diffYears*365+diffDays)*days-diffHours*hours)/minutes); var diffSeconds = Math.floor((diff-(diffYears*365+diffDays)*days-diffHours*hours-diffMinutes*minutes)/seconds); document.getElementById(\"sitetime\").innerHTML=\"匍匐爬行了\"+diffYears+\" 年 \"+diffDays+\" 天 \"+diffHours+\" 小时 \"+diffMinutes+\" 分钟 \"+diffSeconds+\" 秒\"; } siteTime(); 写了这么多月记还没写过「年记」，正好自己也睡不着于是开始构思内容 正文我是从去年九月开始写博客的，那时候我的脑海里还没有「年终总结」的概念，只是在十二月的时候发了一篇文章题为「聊聊我这四个月建博客的经历」 https://linexic.top/2023/12/17/blog/聊聊我这四个月建博客的经历 那时候只是草草的说了一些，具体想表达什么可能只在最后一段「心得」体现了出来，后来看那也算我狭义上的「总结」 今年我做了什么既然是要总结那肯定离不开思考回顾这一年自己究竟做了什么，看看GitHub怎么说的吧 在今年最让我感怀的事肯定就是中考和体考了（还有博客终于稳定下来了！！）我记得体考的时候我也发过一篇文章，但由于那时候博客不稳定体考那篇文章就这样消失了。我的中考分数也不是很理想，只能在本地捞一个六中上（不过有高中上就已经很满足了）我自己在的技术上也有一些进步（至少我能看懂一部分Vue了😂）只是项目什么的还是没有能拿出手的 再者就是我的博客除了趋于稳定外还换了主题，也算是互联网给我的一份元旦礼物吧🎁 高中中考完之后我就进入高中了，高中的课目前勉强能跟上吧，只是到后面我的文章肯定要越更新越少的毕竟高中的压力还摆在那呢 哔哩哔哩我的哔哩哔哩年度报告也出来了发现居然搞笑和动画标签占比多也有可能是我不在家时弟弟妹妹用云视厅看的 游戏游戏的话我现在只是玩《使命召唤手游》和《Minecraft》，两款都是不错的游戏，（突然想起来同学让我下载的《王者荣耀》还没下载！）使命召唤现在已经换了一个号玩，mc也一直在玩一个服务器玩的也有挺长时间了还有一个就是在今年十一月份我入正了 家人 朋友这一年里我收获了很多友情也有一些友情随着中考结束就不再出现同时在家人眼里的我好像更成熟了，印象深刻的就是姥姥姥爷在我家住，有一次我要写作业了他们就找了个理由散步去了说是不要打扰我，放在之前富有知识姥爷看到我写作业多少是要说上两句的，不过现在没有了。这件事让我挺感慨的 我和高中一个不错的朋友认识居然是通过歌曲认识的，我们也算是趣味相投 - 我们都喜欢并且有时哼一些歌我感觉挺不错的 今年的评价网上一直有说自从2018年之后时间就像按下了加速键，不错，今年又是一眨眼一睁眼就过去了，想起在2018年我还是个小学生，那时候和朋友过生日总要去一家汉堡店吃汉堡打游戏，不过那时候的我也并不擅长打游戏 学校里的活动？目前还没办，唯一一次的选体育生小科活动还落榜了🌚 展望生命不息，折腾不止 对于新的一年我也会学习一些新鲜玩意然后就是希望高中的时候分数提一提 2025即将到来对我的挑战也不少，我现在感觉我正站在一条岔路口，路口的指示牌正在等待我的选择:Forward or backward我学校的心理老师说过:人无时无刻都在做选择，甚至你不去选择也是你的选择。感触颇深 那就顶峰相见（中二）","tags":["2024","周年总结"],"categories":["年终总结"]},{"title":"你曾经star学习的项目现在能看懂了吗？","path":"/2024/12/22/github-star-and-project/","content":"前言我有随时翻看GitHub Star的习惯，尤其是下载了GitHub App后更加方便我查看了，后来我偶然翻到了自己曾经折腾过的项目LiteWebChat_Frame看了看文档忽然一个问题映入了我的脑海 自己曾经因为没看懂而star的项目现在看懂了吗 这也是我写文的缘由且也想和大家聊聊这件事 三个阶段我又重新看了一遍我的Star，发现可分为三个阶段1.Minecraft及相关启动器2.命令行及后端3.前端及各种学习书籍 Minecraft最开始注册GitHub一是因为Minecraft的插件等开源在这里，还有就是那时候已经对编程产生点兴趣了，想要在这里学习但还是以Minecraft为主了那时候知道一些启动器开源就star下来方便找了 命令行这个就和Linux有点关系了，Star过一个现在也很知名的Thefuck，说是输入命令fuck就能帮你指出你输入错误的命令行，对一些记不住的命令小白还是挺友好的，不过到现在我也没成功安装上这一神器知道我已经能熟练记住命令行… 关于后端就是Java了，严格上说我的第一语言是Java但后来也没学成就走向了更容易直观看到自己成果的前端了。但在这一期间也跟风Star了一些现在看来没用当时看来成宝的仓库，但这些仓库有一个共同点，就是上传一堆image和ppt到仓库里，现在想来也不知道他们想要干什么，好不容易有个在线阅读的网址吧打开后还是无法访问，现在才知道JavaGuide有多香 前端看前端的时候就知道要注重阅读和实践了千古前端还有鱼皮编程宝典都是那个时候的东西甚至在前端的路上要越走越远，这个时候就是看的在线教程了，也想过购买实体书籍什么的，但一直没有 后面就是这框架那框架，这轮子那轮子的，比如Vue尽管我尝试去阅读他的源码也没阅读出个所以然 而后感觉自己学习差不多了，三件套已经都涉猎一些后就开始搞建站，后面才发现我太天真了，因为一些Vue和nuxt搭建的博客我看不懂他的源码！！尽管那些样式很炫酷我很喜欢但到我这里我是不知道从哪里下手修改的，后来还好点，弄折腾出一个所以然来了 其他感觉聊着这么多都跑题了，现在回归标题，我的答案是 看懂了，但只看懂了一小部分 加上也有一些其他新奇的如996.ICU，HelloGitHub这些也很不错的项目我也都有Star也有一些算法正在学习 最后我认为挺重要的一点:如果一年来你之前的疑惑没有解答那就不能称作是真正的学习，学习总是要知道更多的","tags":["GitHub"],"categories":["GitHub"]},{"title":"Hello Hexo","path":"/2024/12/20/hello-world/","content":"欢迎来到Hexo！ 博客从Jekyll迁移到Hexo","tags":["Hexo"],"categories":["Hexo"]},{"title":"【前端25】文档流","path":"/2024/12/07/guigu-25-文档流/","content":"前言 本文基于尚硅谷Web前端基础教程发布，你也可以理解成这是一篇尚硅谷教程笔记，当然这里也有我的一些经验总结 文档流 normal flow 我们所看到的网页其实是一层叠着一层的，这一点在之前的博文中也有讲过，我们用户看到的是最外面的部分其最里面的部分就叫做「文档流」它是网页的基础，其所有的网页都是在它的模型上建立的（这是一个概念问题）所以我们可以通过CSS为一层层文档流更改样式 一般在网页只有两个状态：在文档流和不在文档流中即脱离文档流。文档流是研究网页布局的，除了概念也有很多其他用法 特点在块元素中这里用div举例： div class=box1我是div1/divdiv class=box2我是div2/divstyle .box1 background-color: yellow; .box2 background-color: red; /style 可以看到两个div是分别占两行的，也就是说div块元素是独占一行的，长条的宽度随屏幕的增大而增长，高度也就是字符高度，这条宽高是”贴身”的除非你去设置 在行内元素中与块元素相反，行内元素不会自己换行只会一行中装不下后自己换到另一行，背景样式同样是”贴身”的，默认高度和宽度会被水平撑开。什么叫水平撑开呢？就是你去把div也好，span也好他们内的文字删去你就发现这个样式也没有了，背景样式全靠文字撑开 这一期也没啥好讲的，不过是平常司空见惯的东西用文字表达出来了","tags":["CSS","前端"],"categories":["前端"]},{"title":"我的第一次月考作文","path":"/2024/12/06/第一次月考作文/","content":"这是我上高中以来的第一次八百字作文，还不熟悉议论文写法，故写下记录以后学习 在时代的洪流中扬帆远航 新时代中国有更多的机遇与挑战，互联网的兴起带动了短视频的产生与兴起，也带动了网络工程师的发展，这难道不是一种机遇吗？新能源汽车的生产带动了越来越多的「新能源」，新能源充电站、新能源公交车及小米公司的新能源汽车、新能源的兴起也带来了一个挑战，那就是如何让新能源续航更久更安全。这肯定需要科研人员的努力，而对科研人员来说这又何尝不是一种机遇呢？武汉已经开始研发并测试一种新的无人驾驶的新能源汽车了，这又将带动新一轮的机遇与挑战。所以，依我看来机遇与挑战并存 新时代是奋斗者的时代。无数「时代楷模」之所以成为楷模是因为他们在自己的领域艰苦奋斗，以一种敬业，乐业的精神于时代的中弄潮，创造了属于自己的不朽功绩。把「大山里的孩子」送出去的老师张桂梅老师手上缠满绷带也坚持为孩子上课，这何尝不是一种敬业与奉献精神呢？最终将孩子送出大山，相继考上大学 新时代是追梦人的舞台。因腿部韧带损伤而无法参加体育的张国伟近期又在短视频中「火了起来」，原因就是他在发布自己的搞笑日常的同时也大量发布了他在为康复训练做的准备，并自己配文称「将继续完成自己的梦想」从而引起了网友的鼓励，正是他有一种不服输的精神，抓住机遇与挑战在追梦路上不断前行，相信自己总有一天会成功的，而又向祖国庄严宣告–「我在！」 新时代是实践者的时代。少年有梦不应止于心动，更要付诸行动。只有行动了才知道自己可不可以完成新时代赋予的使命，只有行动了才能将一件你认为不可能的事变为可能。袁隆平的杂交水稻刚开始也被世界各界称为不可能，甚至被叫做「三不稻」可他沿着这条路勇往直前，将「不可能」变成了可能 年轻的我们更不能做时代的旁观者，应该以他们为榜样在时代中弄潮，在历史的洪流中扬帆远航，抓住新时代的机遇与挑战，向祖国庄严而严肃地宣告–「我在，有我在，我还在！」 写的不怎么好，考试的时候还有错别字啥的 （比如张桂梅老师我写成了张桂英） 在这里发布的有略微改动期望不吝指教指点一二","tags":["作文"],"categories":["作文"]},{"title":"【前端24】RGB颜色值","path":"/2024/12/01/guigu-css-24-颜色单位定义/","content":"前言 本文基于尚硅谷Web前端基础教程发布，你也可以理解成这是一篇尚硅谷教程笔记，当然这里也有我的一些经验总结 正文 上篇讲了长度单位，这次讲一下经常使用的颜色单位 颜色在生活中并不罕见，生活处处有颜色，处处都是多姿多彩的。也有一些带有警告意味的颜色：交通中的斑马线，警示牌，红绿灯等 在CSS中颜色可以是red，yellow，blue等但这些英文字母的使用并不方便，甚至有些颜色你用中文和英文都描述不出来！这个时候就要用到RGB值了 RGB R red G green B blue 它实际的意思就是你用三原色去搭配颜色的它的语法是这样的 background-color: rgb(红色,绿色,蓝色); 其中红色，绿色，蓝色可以取数值，数值范围在0-255或者1%-100%中。在一些取色软件上可以直接RGB值取色，也很方便 RGBA顺带讲一下它的语法和RGB差不多，但它的目的是定义透明度，前三个和RGB一样，只是后面的表示不透明，具体语法是 background-color: rgb(红色,绿色,蓝色,1); 经常用的也就三个 1表示完全不透明 0表示完全透明 .5表示半透明 十六进制的RGB值不要以为把颜色转化为16进制很麻烦了，它和普通的RGB相比有以下优点 1.简洁性通过00-ff绘出颜色要以#开头2.易读性因为转化了，相比于原来的一格一格数字可读性高了 如果不知道自己想要的颜色是怎么样的可以在这里查找，并且配有对比之类的","tags":["CSS","前端"],"categories":["前端"]},{"title":"月记之五:近况","path":"/2024/11/29/month-5-近况/","content":"暂无封面 换座儿风波上次不是考完试了嘛这次就不可避免的要换座位，关于换座位班主任看起来有一个精细的准备：让两边的人互换然后中间的人依次挪动两排最后才是学习好的（前十）挑座位交换。可这次我们班的同学似乎都不愿意换座位因此并不配合，忙活了一节课多才把座位换好啊 冬这个月的7号就已经立冬了。我们同学走在一起的时候还说呢：”初中的时候就早上冷啊，怎么到了高中就成全天都冷了” 虽然入冬了但也不影响我发一些「反季节」的动态 近学校里现在改为一个星期回家一次了（喜）不过老师们为了赶课作业多点了也讲得快点来，不过所幸能跟上。背诵任务多了比如现在权学也刚刚会背，背了差不多一星期 关于本站封面我现在在考虑把封面关掉了，一是拉低站点加载时间;二是有些封面不好好选会影响读标题的体验，比如这篇封面背景都和白色的字混一起了，不大能看出标题 或者我可以学阮把封面写在文章内也可以统一用404图片了 雪冬天了本站也开启了”下雪模式”，在head.html中就可以配置","tags":["月记"],"categories":["碎碎念"]},{"title":"【前端23】长度单位","path":"/2024/11/23/guigu-css-23-长度单位/","content":"前言 本文基于尚硅谷Web前端基础教程发布，你也可以理解成这是一篇尚硅谷教程笔记，当然这里也有我的一些经验总结 长度单位 像素 px; 像素这个词我们现在听起来可能并不陌生做图片、贴图什么的都需要有像素的存在，可以说我们的整个屏幕都是由一个又一个细小的像素点构成的但同样的文字在不同的显示器上的像素的大小可能都不一样像素点越小需要的像素就越多，屏幕也就越清晰 style .box1 width: 200px; height: 200px; background-color: yellow; /style div class=box1/div 如上。定义一个块填充200像素得到下图它会随着上面代码的像素的改动而改动这一点不用说，但到不同设备手上可能会因为”高清屏”的改变给你放大125~150不等 百分比 % 先将一个div嵌套在另一个div style .box1 width: 200px; height: 200px; background-color: yellow; .box2 width: 50%; height: 50%; background-color: red; /style div class=box1div class=box2/div/div 大概就是一个这样的效果 修改box1的宽高就会发现box2也发生了改变，这是因为我们设置了50%的缘故，这里的百分比意思是随着父元素的宽高自动适应为父元素的50%可以设置为相对于其父元素属性的相对值 em em(原来我经常用的”emm”也是css的一部分) em是相对元素的字体大小计算的，即会根据字体大小的改变而改变 1em1font-size，即等于一个字体大小(16像素) rem rem 与em不同的是它是相对于根元素的字体大小来计算，想要改变它需要 html /*在这里更改*/ 总结前两个经常用于图片或块出现的地方，后两个一般都是根据文字的大小做出反应，总之都对响应式(Responsive design)站点有贡献","tags":["CSS","前端"],"categories":["前端"]},{"title":"月记之四:高中的机遇与挑战","path":"/2024/11/01/mother-4/","content":"暂无封面 本文标题取义在政治书上”中国的机遇与挑战”也算是我发的牢骚 机遇（挑战）上个星期还是什么时候，高中老师让报小科了，美术，音乐，体育什么的，我自认为身体状态良好报了个体育哈哈哈，还有一个就是分班了分大文大理，选的大文因为化学和生物已经把我劝退了（裂开了）班里有一个理科战神，我们管他叫蛋哥，他理科是真的厉害了 语文作文现在已经写到八百字了，折合作文本就是三张多一点，勉勉强强写够三张多本子已经交上去了，要是发下来我就在水一篇文章里写我的作文记录一下（bushi）我记得作文标题好像是「摆渡人」也是之前高考的作文，我还记了模板笔记 数学 数学以痛吻我，却要我报之以歌？ 老实说，上高中之前我的数学书一直是干净的，比我兜里的钱都干净（哈哈）高中之后我认为我的数学不能这么荒废下去了，开始恶补，自习的时候都在看数学 特别喜欢学数学，特别是知识掠过脑海却不留一丝痕迹的感觉 但是有一说一，写出来数学题还是很有成就感的，可以和同桌”攀比”炫耀 有的时候你需要攀比我的左同桌（我的学习搭子🤣）有的时候见我学习就开玩笑说你学了公式会用吗，我说会啊，然后直接把我刚解的题告诉他了，并且给他写了一下过程，接着就开始”攀比”起来看谁会什么🌚 我把我的网络小世界告诉我的同桌了，他看了我的文章不可相信的跟我说”这都是你写的？”我说”不然嘞””就没抄别的？复制粘贴？” “有一部分是吧，比如前端学习，当然有自己总结” “主播主播求教程”然后我们聊了一节自习这个的搭建，从GitHub到域名注册👀 困惑面对自己的高中，很多人还不如说一个技校学个技术好，理由就是高考如果失利了就只能在家躺着，而职高中高考如果失利了还能有个技术不至于一下子找不到工作 真的是这样吗….","tags":["月记"],"categories":["碎碎念"]},{"title":"月记之三:国庆与高中生活","path":"/2024/09/30/month-3/","content":"暂无封面 国庆假期“窗外的雨搭焦急着响着，仿佛在催促人们朝窗外看一眼，孩子们总在看着外面，是不是把窗户打开呼吸外面的新鲜空气，或者偶尔有一阵笑声，我的内心就比较贪婪了，我不想朝窗外看一眼，我向往的是外面的世界，呼吸外面的空气，想到这里我竟不由得和外面的雨搭一样焦急起来了，孩子们的笑声又有的嘲笑我贪婪的意味了” 人话：提前约好了出去玩，但是突然下雨只能改变 明天就是国庆节了，也是我们祖国母亲七十五周年的生日了，国庆快乐啊，假期愉快 另外我的个人主页linexic.top也是通过Vue正式上线啦，目前也是正在恶补vue一方面个人主页需要，另一方面技多不压身嘛 国庆假期才刚开始也没什么多说的，还是说说我的高中生活吧（祖国母亲生日快乐） 高中生活摆脱新高一七天的军训生活终于正式投入高中的怀抱啦不过一共要上九节必修课，还有美术信息之类的，在信息书里我找到了一个不算新也不算老的朋友：Python，好像也没什么值得惊讶，我最开始在初中也有印象见它 开始正式上课了，现在高中上课比我初中上课我听得还要认真（至少我在学校待的两周里没有睡过觉）笔记也有在写目前两个什么也不懂的就是化学和数学，这两个直接劝退我选修理科了，所以打算假期恶补•́⁠ ⁠ ⁠‿⁠ ⁠,⁠•̀ 和宿舍里的人的关系还没处好，不过在班里关系不错别的班还有我初中的同学，不至于一个没人与我同伴的境地这个事也对我适应高中有了帮助还是很不错的，搞笑的是我问班里一个我看着眼熟的同学我走进问她：a)：你小学在那上的啊b)：我和你一个小学啊？(⁠・⁠o⁠・⁠)我就说我看着像我小学的人，不过她能说这句话说明她已经认出来我了不过也不先来问我然后导致我听到这段话了很震惊（可能她也怕认错吧🤣 一些其他另外由于高中，我更新博客的频录不会很快了，一些博文的错别字只要不影响阅读我也没有管它，刚把图片排查了一遍，应该没有什么失效的图片了，有的话可以在对应文章下评论给我，看到后我会修复的 晚安，祝好梦","tags":["月记"],"categories":["碎碎念"]},{"title":"【前端22】优先级","path":"/2024/09/01/guigu-css-22/","content":"前言 本文基于尚硅谷Web前端基础教程发布，你也可以理解成这是一篇尚硅谷教程笔记，当然这里也有我的一些经验总结 名称 优先级(好记版) 优先级(标准版) 内联样式 1000 1,0,0,0 ID选择器 #id{} 100 0,1,0,0 类和伪类选择器 .class{},:hover 10 0,0,1,0 元素选择器 p{} 1 0,0,0,1 通配选择器 * 0 0,0,0,0 继承样式 没有优先级 这里先把样式等优先级列出来方便记忆和查看理解 理解内联样式内联样式是网页中最高的优先级但是我们也最好不要使用内联样式因为内联样式是不如内部样式和外部样式好用的，其一是因为网页内容多了想要定义多个样式就得一行一行写内联很麻烦，其二就是它级别太高了，你如果想要在内联的基础上修改某一部分样式就会因为内联的级别太高而无法正常生效 对比一下：可以复制下来自己对比 p style=color:redLineXic!!!/p!-- 这是内联样式 -- /* 这是内部样式 */pLineXic!!!/pstylep color: blue;/style 两种都定义了文段LineXic！！！的颜色，与之不同的是高优先级的「内联样式」定义的是红色而「内部样式」则是蓝色思考一下，字段会变成蓝色还是红色的？这就是优先级的好处–比别人更快显示样式并覆盖 通配选择器* 称为通配选择器可以是全文的文段标签都应用上这种效果，h1标签也好，p标签也好全部定义成一个样子的可以任意支配任何选择器。听上去功能强大，但是不推荐使用 继承选择器在继承中，虽然子标签继承了父标签的属性但不继承它的权重(类似于地位) 如何比较优先级比较优先级时，可以将所有的优先级相加计算，优先级越高则优先显示这个和理解一段说的差不多 但他们之间是不会相互「越界」的，比如ID选择器相加在高也是不会超过内联样式的选择器的 !important在外联样式中用!important规则大概是这样的 p background-color: red !important; 和通配选择器不同的是，它只在特定的标签内生效有一种限制即上文的p... !important也是一种坏习惯，应当尽量避免，当不考虑其他优先性时也是可以用它的","tags":["CSS","前端"],"categories":["前端"]},{"title":"月记之二:生活与学业","path":"/2024/09/01/month-2/","content":"「体验生活期」可算结束了，今天是9.1日，一些初中学校和小学已经开学了在这一天我历经41天的「历练」结束了😄算下来也已经很久有更新「前端」部分的博客了（因为要干活嘛） 这次经历下来也不是没有学到东西，也学到了，比如我之前是一个比较社恐的人，不太敢说话，经过这次我就感觉我大胆了一些也敢说话了再者就是动手能力强了，遇到一些东西也敢拆敢装了，总结下来就是你在困难和经历中成长这句话我跟老板总结出来的时候老板还夸我呢🤣🌚 再者说一下学业吧。马上开始新的学期博客还是会抽时间更新的，毕竟我还要坚持我的「梦想」然后就是努力学习，在我初中考三百多分的时候高中也要进步 这次来讲一下封面吧，封面是我们有一次去拉安装的门，但门还没完全弄好就在一个地方等待了一会（就是在封面这里）","tags":["月记"],"categories":["碎碎念"]},{"title":"记一次Discuz!Q的宝塔部署全过程","path":"/2024/08/22/discuz-install-riji/","content":"本文章部分字段和全部图片来源于文档 前言 再小众，也有自己的圈子 相信很多在互联网深耕多年的人都有过要开论坛的想法吧，我之前也想过开一个论坛，这一个Discuz!Q是我开的第二个论坛，第一个论坛使用wp搭配zibi搭建的，当时还发了一个Q动态来分享我的喜悦 正文 DiscuzQ 拥有完全开源、提供丰富接口、前后端分离、轻量化、数据独立可控、敏捷上云、快速变现七大能力。 1.安装宝塔视服务器系统不同，宝塔官方给用户提供了不同的安装方案 CentosOpenCloudAlibaba稳定版9.0.0 yum install -y wget wget -O install.sh https://download.bt.cn/install/install_lts.sh bash install.sh ed8484bec Debian 安装脚本稳定版9.0.0 wget -O install.sh https://download.bt.cn/install/install_lts.sh bash install.sh ed8484bec UbuntuDeepin 安装脚本稳定版9.0.0 wget -O install.sh https://download.bt.cn/install/install_lts.sh sudo bash install.sh ed8484bec 稳定版9.0.0 通用安装脚本 url=https://download.bt.cn/install/install_lts.sh;if [ -f /usr/bin/curl ];then curl -sSO $url;else wget -O install_lts.sh $url;fi;bash install_lts.sh ed8484bec 正式版9.1.0 通用安装脚本 if [ -f /usr/bin/curl ];then curl -sSO https://download.bt.cn/install/install_panel.sh;else wget -O install_panel.sh https://download.bt.cn/install/install_panel.sh;fi;bash install_panel.sh ed8484bec 本文演示使用Ubuntu系统，PHP7.4为例，下面将默认你已经安装并熟练使用宝塔面板 安装扩展首先安装PHP扩展fileinfo和exif，点击【软件商城】找到【设置】，找如下图 找到PHP版本，点击设置，以7.4为例（图片是7.2） 在弹出的 【php 管理】窗口中，单击【安装扩展】，进行安装扩展设置 点击对应插件并确认安装，如图 删除禁用函数Discuz！Q 需删除禁用的函数 putenv、readlink、symlink、shell_exec，部署前需对 PHP 进行相关配置 创建站点创建并填写信息 MySQL使用5.7.9以上 PHP使用7.2版本以上，最好使用PHP7.4 上传并解压源码 修改配置在宝塔控制台中，单击【网站】，并选择已创建 Discuz！Q 站点，单击【设置】并点击网站目录 运行目录填写/public 设置伪静态并修改Nginx点击伪静态添加如下代码 location / try_files $uri $uri/ /index.php?$query_string; 接下来 单击【软件商城】，并查找到您安装的 Nginx。 单击 Nginx 操作栏的【设置】。 在弹出的【nginx管理】窗口中，单击【配置修改】 在【配置修改】中查找到gzip_types字段并在前端添加application/json和末尾处添加application/vnd.api+json代码后重启Nginx服务 接下来访问你的站点愉快游玩吧，安装栏中的表前缀是可以不填的，其他在创建站点时都有，站点信息、管理员姓名和密码可以自定义","tags":["Discuz!Q","宝塔"],"categories":["经历"]},{"title":"【前端21】样式的继承","path":"/2024/08/13/guigu-css-21/","content":"前言 本文基于尚硅谷Web前端基础教程发布，你也可以理解成这是一篇尚硅谷教程笔记，当然这里也有我的一些经验总结 继承 像现实中儿子继承父亲财产一样，子标签也会继承父标签的一些相关样式[1]在web中你也可以通过定义父标签来让子标签更改样式，使我们更容易开发（如果有一天你不知道一个标签规则的作用是什么，你不妨想想没有了这个标签规则将会发生什么） 我们可以这样运用 stylep color: red;/stylep我是pspan 我是span/span/p 注意，行内元素不能套块元素 这是怎么回事呢，我没有给span设置样式啊，他怎么自己变成红色了？这就要归功于继承了：设置了父元素的样式后子元素也会跟着改变 利用继承我们可以将一些通用的样式统一设置到共同的祖先样式上，这样只设置一次即可让所有的样式都被继承 说了这么多那些样式是可以继承，那些样式不能继承呢？ 1）行内和块元素等可以被继承2）背景布局等元素不可以被继承 说起这个我也有一个坑，当时的代码是这么写的 p span 点击图片查看详情 /p/spanstylep background: gold;/style 乍一看没什么问题，p元素设置背景颜色为金色，可我忘了还有继承这一说导致最后变成了这样两个标签两个范围都变成了金色，所以我改善后是这么写的 p span 点击图片查看详情 /span/pstylep span background: gold;/style 定义明确是p里面的span也就不存在继承这一说了，还有一个原因是继承本身不能用背景和布局，这样运用肯定会出错误，虽然当时span也出现背景了，但那个不是真的背景，只是p背景中透到span的，并不是span的继承背景","tags":["CSS","前端"],"categories":["前端"]},{"title":"月记之一：生活与梦想","path":"/2024/08/07/month-1/","content":"距离我上次更新博客已经过去了一个月左右，本来这次月记是想着到整一月的时候更新，可又想想那个时候可能不一定有时间就现在趁着还有点「海绵水」努力的挤点 日记中考有了解过的应该知道我现在是一个准高一学生，在七月二日时出的中考成绩，考了376，当时还挺激动的，毕竟两年来最好的一次成绩献给了中考也算是没有遗憾了，中考这一块其实没什么特别的，但也和体考一样，也就这一次了，这一次带给你的体验是不一样的，所以还是记录一下比较好 毕业啦！！ 今年是中考填报志愿的第一批学生，那个时候也算为志愿操碎了心，七月四号左右就可以填报志愿了，因为考的并不理想所以留下给我们选择的学校也不多，记得那个时候就把1到7中都报了一遍 最后还是六中录取了 在这之前为什么标题要取「生活与梦想」呢，这就要提「在这之前」了 中考成绩出来之前我的妈妈就已经领着我到处找学校了（为后来铺路）看的大部分都是职高技校，当问到我想学什么的时候我毅然选择了计算机，但可能考虑到计算机太内卷，不好找工作等因素没有同意，认为比如找一个技术活维修之类的养家糊口，所以最终计算机成为了我的梦想，只能做梦想想的东西 （但看了上段的都知道我最后还是有学校录取的，所以避免了技校这一条路） 现实生活去学校报到后就没有什么事情了，相对轻松了很多并且我明显感觉在家很无聊了，这是有人提议让我找个班上打一个暑假工，想想也没有事情做就答应了 因为我有一个Minecraft互通服务器（并且严重缺经费），所以在正式干活的时候在QQ群里的调侃 这一段时间我没有发博客就是再忙这件事了，为了生活啊，累啊，知道这份工作的不容易后就已经是上班、回家两点一线的生活了，我现在这份工作显然没有成年人难，因为我现在还有父母可以依靠，等我真正长大了「家」这个担子也就落在我身上了。所以长大第一步，先忘记梦想 生活与梦想回到主题，「计算机」可以说是我的兴趣一个梦想，但听了大人说的话就逐渐接受了「老人言」，我现在也只能在网络上发发神经，做做文章了 其实这一版的主题最开始叫「生活与理想」但又想到理想起码还是有实物的东西，而梦想就有点虚无缥缈了 梦想就像天空上的北斗星，而生活就是漂流在大海迷失方向的船，我们的航行需要北斗星的指引，但是在怎么指引你始终触摸不到他 可能有人说我悲观主义，甚至认为我认为梦想与现实是不可能交汇的，然而不然，因为有了北斗星的指引你说不定能找到自己的理想从而驶出这片大海，或者因为有可北斗星的指引，你更加努力追求，从而说不定能造出「火箭」虽然这说的都是玩笑话，但是追求梦想与理想的劲头还是要有的 晚安，祝好梦","tags":["月记"],"categories":["碎碎念"]},{"title":"【前端20】超链接的伪类和伪元素","path":"/2024/08/03/guigu-css-20/","content":"前言 本文基于尚硅谷Web前端基础教程发布，你也可以理解成这是一篇尚硅谷教程笔记，当然这里也有我的一些经验总结 超链接的伪类超链接的伪类是针对a标签的伪类，一般有以下几个 a:link a:visited a:hover a:active 在「超链接」一文中我们也了解到当链接被我们点击时，被点击的链接会变成紫色，所以链接也就简单分为两类 1.访问过的2.没访问过的 我们可以通过CSS来改变一些效果，比如让没访问过的链接是红色？ a:link color:red; 如你所见，link表示没访问过的链接，对一般正常的链接都有效果 而下面这种就和它完全相反，它就是visited它则表示更改访问过的链接的样式 a:visited color:black; 值得留意的是因为隐私问题visited无法更改字体的大小，必须使用link比如这样 a:link color:black; font-size:50px; 这很有趣，你可以在自己的本地试一下 上面这种效果很有趣，那么是怎么实现的呢，比如鼠标移入后链接的状态 这其实是a的另一种伪类:hover，hover的作用是定义鼠标移入后链接的改变，包括改变一些字体会大小之类的，可以这样完成 a:hover color:black; font-size:50px; 另一个和它相反的伪类就是active了，他则表示鼠标点击后的效果，注意，自己测试时想要查看效果就不要松开鼠标左键，因为松开的话就会跳转到那个网站了，它是这样写的 a:active color:yellowgreen; font-size:50px; 它规定了当鼠标点击后链接变成绿黄色，然后字体为五十像素，因为在手机演示并截图不方便所以就需要大家自己动手了 伪元素 既然伪类表示不存在的类了，那么伪元素就表示在一些特殊位置不存在的元素了，伪元素使用::开头 伪元素 如果我们现在有一个需求，就是在页面的第一个字母，仅仅第一个字母变大，我们可以怎么做呢 pYou are amazing/pp Pug is a terse and simple templating language with a strong focus on performance and powerful features/p 有的人可能会说了，可以通过span并定义class类啊，比如这样？ style .px font-size:50px;/stylepspan class=pxY/spanou are amazing/ppPug is a terse and simple templating language with a strong focus on performance and powerful features/p 这样当然也达到了我们的预期效果，但是是不是有一个弊：就是你文章段落多了，想要每一个首字母都变大就需要在每一个字母前加一个span，就很麻烦有没有什么更快捷的方法呢，你记住，不管是伪类也好，伪元素也罢，它们都是为程序员服务的，只会简化工作，不可能让工作变繁琐的 我们可以通过::first-letter来表示定义第一个字母，可以这样写 p::first-letter font-size:50px; 两个段落的p就都改变大小了 有没有可以范围更广的呢，比如表示第一行的样式？有！那就是first-line p::first-line background-color:red; 这个意思是定义第一行的背景的颜色为红色，效果是这样的 有没有一种办法是当我选中内容的时候字体颜色变色呢？也有！那就是selection p::selection background-color:red; 当然这些p可以替换成任意标签但必须有实际意义的 CSS是一个很有趣的语言，它可以使没有位置的地方出现字并修改效果，更有趣的是这种字体是无法被复制粘贴触发的，也就是说你不能复制这个内容，因为他是CSS创造出的字并不是HTML before表示字体的开始 after表示字体的结束 它们必须结合content属性使用 p::before content:我是before ; 如果我们想要改变其样式就在下行添加其他，比如 p::before content:我是before ; color:red; 而和before相反的after则有异曲同工之处，这里不对做赘述了 那么这样的样式有什么作用呢？HTML也有一个「快捷方式」那就是q表示双引号而before和after则为段落前后提供了更多样式","tags":["CSS","前端"],"categories":["前端"]},{"title":"GitHub创始人资助Ladybird开源","path":"/2024/07/11/ladybird/","content":"现在的互联网看此已经形成了一种趋势就是Chrome，Edge，Firefox三大浏览器巨头占据网络，并且现在有名的闭源浏览器Brave 和 Opera都采用了Google的Chromium搜索引擎而chrome就占领了「头头」地位了，这个时候有一个开源浏览器就显得尤为重要，不受商业模式的污染，只专心做自己的浏览器 值得注意的时候，20年前，GitHub的创始人就为了Firefox买下了两页广告纸看得出来他很是喜爱和支持开源事业，他认为现在的市场需要一个独立并有创新精神的浏览器，所以投资100万赞助了这款浏览器 它的独立性体现在两个方面： 技术：不使用 Blink、WebKit、Gecko 或任何其他浏览器引擎的代码 收益：虽然资金来自赞助商，但赞助商无权干涉项目的开发和运营 在这里贴一下Ladybird浏览器的GitHub仓库地址。该项目目前还在开发阶段，预计2026年夏天上市 掘金关于Ladybird的热点地址","tags":["浏览器"],"categories":["开源"]},{"title":"记一次百度统计的应用","path":"/2024/07/05/baidu-tongji/","content":"百度统计的应用 灵感一次看到了承挨博客脚页下的博客统计，感觉很美观，就像着自己弄一个最开始想着是用不蒜子计数器，可发现了一个诟病就是：网页每次刷新都会提示访问量加一，这样感觉有点假，况且也无法做到像上图那样每一个都面面俱到，折腾了好一会我决定开始转变思路 百度统计我就想既然主页面没法弄，那我就从”后端”入手即百度统计 关于百度统计hux的主题是内置了的，需要我们在_config.yml下有专门的字段，原文档介绍如下 网站分析，现在支持百度统计和Google Analytics。需要去官方网站注册一下，然后将返回的code贴在下面： # Baidu Analyticsba_track_id: 4cc1f2d8f3067386cc5cdb626a202900# Google Analytics# ga_track_id: UA-49627206-1你用Google账号去注册一个就会给你一个这样的id# ga_domain: huangxuan.me 看完文档我打开百度统计，首先登录，登录完之后点击”新增网站”把我的网址输入了进去，输入后会出现一段统计代码，类似 scriptvar _hmt = _hmt || [];(function() var hm = document.createElement(script); hm.src = https://hm.baidu.com/hm.js?9ecfed90ae982b01f0b7cb1770447760; var s = document.getElementsByTagName(script)[0]; s.parentNode.insertBefore(hm, s);)();/script 这一段中?后的字段是唯一的，需要把这一段添加进_config.yml中的指定位置 但我添加后尴尬的一幕发生了，GitHub报错了，我又在那里折腾了半个小时还是没有解决，甚至差点弄得我的博客仓库的文件不受理更新了 无奈我按照统计官网的方法，把它添加到了_includes/head.html中这是hux主题中掌管全局的地方，可以理解为古希腊掌管head全局的神果然好礼，在统计中点击检查代码后GitHub不报错百度也没有错误，提示代码位置正确。果然，自己折腾有时候是好的 现在我也能在百度中查看自己网站的流量显示啦","tags":["百度统计"],"categories":["百度统计"]},{"title":"【前端19】属性选择器和伪类选择器","path":"/2024/07/03/guigu-css-19/","content":"前言 本文基于尚硅谷Web前端基础教程发布，你也可以理解成这是一篇尚硅谷教程笔记，当然这里也有我的一些经验总结 属性选择器属性选择器是选择属性将其改变的选择器，我们先前最常用的就是class和id选择器了，不过这次我们不讲这两个，讲一个新的—title title除了做网站的标题外还有一个作用就是选择了具体作用如上图，移动鼠标到选择器的选择标签后显title的属性值样本文字，那如果我想要title的文本设置颜色怎么办？废话少说，看代码 p title=LineXic123君住长江头/pp title=123LineXic我住长江尾/pp title=L123neXic日日思君不见君/pp共饮长江水p style p[title=LineXic] color: red; /style 如果我们只是单纯写一个p标签的话那么最后一行也会变成红色，所以在CSS加了[title=]这么个样式，其中也有很多分类，比如 p[title] [属性名] 选择含有指定信息的元素 p[title=LineXic] [属性名属性值] 选择含有指定属性值和属性名的元素 p[title^=L] [属性名^属性值] 选择属性值以指定值开头的元素 比如第一和第三句的共同开头为L所以他们变红 p[title$=LineXic] [属性名$属性值] 选择属性值以指定值结尾的元素 p[title*=LineXic] [属性名*属性值] 选择属性值中，含有某值的元素的元素 比如我第一二句都有LineXic，那么不论它在那个位置中间也好，两边也好都会被选中 伪类选择器 Mdn文档 ul li1 /li li2 /li li3 /li li4 /li li5 /li/ul 这是一个列表，写了15这些数字，现在有一个要求：要求15数字全部变红，我们学习了父类和子类元素这就对我们来说不在话下 ul li1 /li li2 /li li3 /li li4 /li li5 /li/ulstyleul li color: red; /style 这样1~5数字就变成红色了 可是我现在有一个要求就是让第一个也就是第一行单独变色，这个时候我们可以在CSS写 ul li.first color: red; 而HTML需要 ul li class=first1 /li li2 /li li3 /li li4 /li li5 /li/ul 也就是在第一行添加class类，这是完全没问题的，可是就会有一个问题：后期行数的增加或改变那么我们也要一遍遍去添加或删减class类有没有一个方法避免这个问题呢，答案就是伪类 伪类即不存在的类，它可以用来描述一个元素属性的状态，元素更改时他也跟着更改并且伪类一般以:开头，比如如果我不用class来定义第一行的文字颜色我就可以用 ul li1 /li li2 /li li3 /li li4 /li li5 /li/ulstyle ul li:first-child color: red; /style 来描写首句红色，不管添加多少li，首行li都是红色 而:last-child则不同，它是定义最后一段的文字颜色，同理，你不管在最下面写多少li它改变的始终是最后一行 :nth-child()可以选中n个元素，它有三个特殊值要填在英文括号内 2n或ever表示选中偶数位的元素 2n+1或odd则表示奇数位的元素 n则表示全选，而按照硅谷的话就是0~无限 但这些有一个弊端，我上文也在强调了具体的标签如li，那如果首行不是li呢，写一个span挡住li了那么就无法判断，这个时候就可以用这三个标签了，这三个标签和上述伪类用法基本差不多，唯一的区别就是他们会在同类型元素中排序，例如首个li上挡住了一个span标签，但也不碍事，他会在那一堆li标签中选择合适的 :first-of-type :last-of-type :nth-of-type 在介绍一个伪类：:not()否定伪类 例如： ul li1 /li li2 /li li3 /li li4 /li li5 /li/ulstyle ul li:not(:last-child) color: red; /style 这个说的就是在li标签里，不变色最后一个标签也就是5，把最后一个标签除外了属于是当然也可以填写别的标签，我这里只是举了一个例子 更多详细的东西还需要看文档-伪类","tags":["CSS","前端"],"categories":["前端"]},{"title":"【前端18】复合选择器和关系选择器","path":"/2024/06/29/guigu-css-18/","content":"前言 本文基于尚硅谷Web前端基础教程发布，你也可以理解成这是一篇尚硅谷教程笔记，当然这里也有我的一些经验总结 复合选择器复合选择器说白了其实就是一个套着一个，多重使用，但它复合的条件以下标签必须全部满足，下面举例说明 div class=red我是红色div/divp class=red我是红色p/p 现在如果我们想把class设置成红色这已经难不了我们来，我们直接 .red color: red ; 可是我们如果想要把div的字体调成30px呢？在red那一行写吗？显然不行，因为这里有两个标签的class是red，在red里写会使两个标签都变成红色，可我们的要求是一个div标签变成红色就好，那应该怎么办呢 div.red color: red ; font-size: 30px; 这样div标签就即是红色，又是30px啦，想要p标签不被影响就可以单独把它列出来，保留上一个CSS 这样的选择器又可以叫交集选择器 作用:选中同时符合多个条件的标签 语法:选择器1选择器2选择器n{} 要注意的是如果选择器中有标签元素，必须要以标签开头，如上就是div在前头，.选择器在后头 复合选择器里又分了并集选择器 并集选择器相比交集选择器要求稍微松一点，因为你只要满足选择器中的其中一项要求就可以了，例如 div class=red我是div/divp class=red我是p/pstyle div, .red color: red; font-size: 30px; /style 如果按照交集选择器就只会让第一行的div变成红色，因为它满足选择器中的条件，又有div有时red的class 但你们看出来没有，这里的两个元素中间有空格并且有,隔开，这就是并集选择器的语法，作用就是让不是div的元素，只要你满足了red这一点就一律帮你完成字体和颜色的设置 并集选择器只需要符合一点要求就可以了，所以div的p元素都能得到设置而交集选择器需要完成两个，这里的,代表“或，或者” 关系选择器 在正式开始之前，还需要认识几个概念 div我是一个divp我是div元素里的p元素span我是p元素里的span元素/span/psapn我是div中的/span/div 在这个里面，各标签和各之前是环环相扣包括的，其中包括 父元素 直接包含子元素的元素叫子元素 子元素 直接被父元素包含的元素 祖先元素 直接或间接包含后代元素的元素 一个元素的父元素都可以称是祖先元素 后代元素 直接或间接被祖先元素包含的元素 子元素同时也可以说是后代元素 兄弟元素 拥有相同父元素的元素 综上我们把刚才那段代码写上注释方便理解，方便区分我把两个span标上序号.1和.2 div!-- div就是一个祖先元素，它包括了这里面的所有元素 --我是一个div!-- p元素是.1元素的父元素或者说祖先元素因为它包括着span.1 --p我是div元素里的p元素!-- 它的辈分就相对小了，他是div的后代元素，是p的子元素 --span.1我是p元素里的span元素/span/p!-- 它和p标签是兄弟关系，拥有相同的父元素--div --sapn.2我是div中的/span/div 子元素选择器 选中指定父元素下的子元素 父元素 子元素{} 理解了这个接下来就好说了，如果有一个要求，需要在下面的代码框里添加代码，使它实现让.2变成红色我们需要 div我是一个divp我是div元素里的p元素span.1我是p元素里的span元素/span/psapn.2我是div中的span/span/divstyle div span color:red ;/style 这个的意思是直接选中div内的直接span，也就是span.2定义为红色 也可以复合使用 div p span color: red; 这样就只想p元素里的span，相当于文件的路径了 后代选择器 选中指定元素内指定后代元素 祖先 后代 这次我不让.2变色了，我想让.1变色，首先先想想.1和谁有关系–div，div在其中是.1的祖先，我们可以用后代选择器 div我是一个divp我是div元素里的p元素span.1我是p元素里的span元素/span/psapn.2我是div中的/span/divstyle div span color:red; /style 也就是说省略大于号了，直接空格 选择下一个兄弟 前一个 + 下一个 兄 ~ 弟 改变一个样式的话就是+，之间所有的话呢就是~相接","tags":["CSS","前端"],"categories":["前端"]},{"title":"【前端17】CSS的基本语法和常用选择器","path":"/2024/06/25/guigu-css-17/","content":"前言 本文基于尚硅谷Web前端基础教程发布，你也可以理解成这是一篇尚硅谷教程笔记，当然这里也有我的一些经验总结 基本语法首先讲一下CSS的基本语法中的注释，之前也讲过注释的作用是方便维护或解释代码，符号为/*结束符号是*/注释中的内容会被浏览器忽略 值得注意的是这样的注释只能在CSS中使用，如果你使用了内联样式就只能在style使用，不能再HTML中使用，HTML的注释是!-- -- 选择器or声明块bobypLineXic!!!/pstylep color: red;/style/boby 先看一个代码例，方便我们更好解读 其中style中的p元素就是一个选择器，它的作用选择上方的p标签，并定义其样式 里的东西就是声明块了，声明块顾名思义就是通过声明丁一其中的样式元素，其结构是名值对结构，即:连接以;结尾（英文），其中最后一个值得;是可以省略的，效果都大差不差 常用选择器 CSS选择器 还记得之前说过的ID嘛，它定义了一个唯一标识符，除了上面那个选择器外，在介绍三个常用选择器 1).ID选择器 有的时候我们会面临一个问题：你定义了大量的行标签，这是你只想让其中一个行里面的文字改变样式，例如下面： pLineXic/ppLineXic blog/pstylep color: red;/style 这样运行肯定会两行全部改变颜色，我只想让一行改变颜色就可以使用ID元素，改动如下 pLineXic/pp id=redLineXic blog/pstyle#red color: red; /style 这样就不会两行全部变红了，语法就和上面演示的一样 #id属性 名值对 2).类选择器 ID选择器无法重复使用一id，那如果我是真的需要重复使用该如何做呢？使用class类选择器 p class=redLineXic/pp class=redLineXic blog/pstyle.red color: red;/style 也可以一个选择器放多个类，中间用空格隔开一定注意使用英文的引号引起来我刚刚就犯了这种错误 3).通配选择器 顾名思义九十整个页面统统更改样式，也不管你什么标签p便签也好h便签也罢，统统更改 h1LineXic/h1pLineXic blog/pstyle* color: red;/style","tags":["CSS","前端"],"categories":["前端"]},{"title":"毕业啦！！！","path":"/2024/06/22/bi-ye-la/","content":"图片来自网络本博客写于6月19日中考看考场前夕，重新编辑于6月22中考结束，主要记录中考的经历 图片欠缺 我们（2021）级学生终于迎来了中考这一大关，有人说中考比高考重要，因为没有中考哪里来的高考，现在想想也是，但他们都是 千军万马过独木桥 今年我所在的县城共有一万五千多人参加中考，比去年多得多，所以竞争有多了 考试考试那天我是五点多醒的，准确来说是被喊起来的平常我也根本不在那个点醒来，迷迷糊糊的穿上衣服洗了把脸清醒了过来，迅速把东西收拾好就出发了，连饭也是买了个煎饼果子，一杯豆浆在路上吃的 路上我还在看语文课本，想着自己查漏补缺，怎么说呢，那时候就想着：“考个好成绩” 直到到了考点我开始紧张了起来，距离在领班老师那里签到还有一段时间，我就在车上复习，索性：第一场考我拿手的语文 字词填空，古诗默写，阅读理解一气呵成（有错误在检查的时候被改正了），可由于我考前的紧张导致我看错了时间，本来的十点左右我看成了十一点左右（索性最后稳住了性子），以为快交卷了的我急忙写作文，这时前面只剩两道大题 一看作文我傻眼了“定心丸”什么啊，“一句宽慰的话，一个鼓励的眼神…”行吧，开写吧，考前背的押题作文全无用 好在剩最后十五分钟的时候写完并检查了（作文只差两行就写满了）我的语文卷应该胜率挺高的吧，卷面最开始都一些蹭到的油笔芯痕迹也拿橡皮擦过了 第二天这一天考试全是我不擅长的数学和英语从教室门进去我就看见老师讲台上的试卷文件在那里堆放，眼睛里也有些疲倦，我看向台下部分同学，他们眼睛里写着“快tm结束吧，太累了” 确实中考很累，不光是学生，家长在外面等也很累，反正是个很累人的活，我现在在半夜十一点编辑这篇博客的时候手机都差点砸到脸上 吃饭中考除了考试也是要吃的，中午会出去，第一天下了雨买了两份米饭快餐盒饭在自家车里吃，我打开了一份，家长的那一份还没打开我的那份就撒了，家长把她的那份给我了 第二天中午吃的土豆粉，没有在车里吃，但那家店老板脾气有点古怪，也不留客，先让客人扫支付码付钱他才给起锅开灶（店里人也多，也乱），我们那份本来是要在店里吃的，结果给我们打包了… 中考必胜这里借用英语听力的一段话 听力部分到此结束，预祝同学们取得好成绩 晚安，祝好梦","tags":["杂谈","碎碎念"],"categories":["碎碎念"]},{"title":"【前端16】CSS简介和编写位置","path":"/2024/06/08/guigu-css-16/","content":"前言 本教程基于尚硅谷Web前端教程发布，你们也可以理解为这是一篇尚硅谷教程的笔记，当然这里也有我自己的一些经验总结 简介层叠样式表，也就是CSS-是我们学习完HTML后另一项需要学的技术，如果说HTML是骨骼的话，那么CSS就是衣服样貌 层叠样式表 我们在访问网页的时候看到的基本都是一个平面，实际上他们是层叠的，一层压着一层，一个属性压着一个属性，而CSS又是表达样式的所以就称作层叠样式表了 编写CSS可以编写在三种地方：内联样式，内部样式，外部样式 内联样式先给出一个实例，后面慢慢解答 p style=color:redLineXic!!!/p 这样的编写方式也就使用了简单的名值对，值得注意的是名值对要写在开头标签里，其中style是样式信息元素，接下面也需要讲到 内联样式有个很麻烦的事情就是“太麻烦“了我们写了很多行字就需要写很多行名值对，这就很麻烦，而且也不利于后面的维护，所以有了“内部样式表” 内部样式表大概例子是这样的： bobypLineXic!!!/pstylep color: red;/style/boby 在一行内写文字，另一行写CSS样式并用style标签包围，注意，一旦用style标签包围了，那么里面的因素就不属于HTML而隶属于CSS了，名值对之间空格隔开，一个写冒号，一个分号结尾 但只针对一个页面渲染样式，多个页面时使用麻烦 外部样式表link rel=stylesheet href=./ 在外部新建一个style.css的文件，名字不重要，重要的是后缀一定要是.css并用link标签引用，后面的href就是文件的路径了 使用外部链接引用意味着只要引用了这个页面就可以使用这个CSS，比前两个都方便快捷了不少 利用浏览器的缓存性质可以使网页加载更迅速，不用每次进来的时候样式都加载一遍","tags":["CSS","前端"],"categories":["前端"]},{"title":"忙碌的同时也别忘了看看生活","path":"/2024/06/07/shenghuo/","content":"我一直有看到好看的景色拍下来的习惯，总想着定格那一个美好的瞬间，以至于后来翻相册的时候也能不禁笑一下，去想那个美好的瞬间 这句是有点治愈的一段话，配合这个小王子的图片，神了 下面是我一直以来喜欢的图片 小麦地里的夕阳在我家阳台上拍到的在山东玩的时候看到的狗，拍下来了，这个狗挺像我小时候的狗哔哩哔哩番剧找到的，忘了是哪个了","tags":["杂谈","碎碎念"],"categories":["杂谈"]},{"title":"【前端15】替换标签","path":"/2024/04/03/guigu-html-15/","content":"前言 本教程基于尚硅谷Web前端教程发布，你们也可以理解为这是一篇尚硅谷教程的笔记，当然这里也有我自己的一些经验总结 内联框架 iframe src= frameborder=“0/iframe 用于向网页引入其他网页 一般有两个标签 src 用于引入框架链接 frameborder 用于设置框架的边框，0为无边框 同样iframe也可以设置宽和高等等名指对因素 注意： 内联中的网页是不会被SEO的，内联中的网页也与你编写的网页无关（现在不经常使用 引用内联不会影响其他标签使用 音视频播放 音频 文档 audio： 用于在网页中播放音频 audio src=/audio 默认的音频标签是无法允许用户操控进度的还需要属性controls autoplay 定义音频是否自动播放，但这一属性在大部分浏览器已经不适用了，除非部分浏览器用户点击过这个音频然后刷新网页才能自动播放 loop 用于说明音频是否循环播放 这些标签是我们第一次见到不需要的名指对 audio src= controls autoplay loop /audio IE8需要注意的是在IE8浏览器中不支持audio标签，我们可以这样提示他 audio controlsp对不起，您使用的浏览器不支持本标签，请换浏览器/p source src=/audio 我们也可以通过embed解决问题 audio controls!-- 对不起，您使用的浏览器不支持本标签，请换浏览器-- source src=音频.mp3!-- 当然也可以多写一个 source src=引用不同格式的音频，浏览器会优先选择最适合播放的播放，一般采用mp3格式 --embed src= type=写入文件属性，如audio/mp3/audio 视频播放video src= controls/video 使用方法基本和audio一样 video controls source src=!-- IE无法8无法识别video时识别这个标签 -- embed src= type=video/mp4/video","tags":["前端","HTML"],"categories":["前端"]},{"title":"【前端14】IMG标签和图片格式","path":"/2024/02/25/guigu-html-14/","content":"前言 本教程基于尚硅谷Web前端教程发布，你们也可以理解为这是一篇尚硅谷教程的笔记，当然这里也有我自己的一些经验总结 图片标签 图片标签(img)是向外部引用进网页图片的标签，可以使用img标签使你的网页显示图片，它是一种自结束标签 img src=/ 是它的格式，其中引号内填入图片图床直链，直链可以通过鼠标右键长按图片获得，但有可能直接侵权，不保险 IMG是一个替换元素，同时具有块和行内元素属性 完整 img src= alt=/ IMG的属性 src 写入直链 alt 写入对图片的介绍，在图片加载不出来或无法加载时显示alt内容，比如 当然alt还有一个用途，那就是被搜索引擎搜索到，写入alt后在搜索会根据alt关键字搜索 widthheight 定义图片大小（一般PC电脑端不会用到，单位像素）和宽度，更多时候只写width属性就行，高度也会随宽度调换等比例缩放 img width= src= alt= 图片格式 jepg（jpg） 支持颜色比较丰富，不支持动图和透明效果 一般用来显示照片 gif 支持颜色少，支持简单的背景透明，支持透明 照片动图颜色单一 png 支持背景透明，颜色丰富，不支持动图 颜色丰富，复杂透明图片（专为网页而生） webp 谷歌近几年推出的新图片格式专门表示网页图片 它具有以上所说格式所有的优点并且文件体积还小 缺点兼并性差 使用图片技巧 效果一样用占体积小的 效果不一样就用效果好的","tags":["前端","HTML"],"categories":["前端"]},{"title":"【前端13】超链接","path":"/2024/02/22/guigu-html-13/","content":"前言 本教程基于尚硅谷Web前端教程发布，你们也可以理解为这是一篇尚硅谷教程的笔记，当然这里也有我自己的一些经验总结 超链接 正如上图虽说，超链接的作用是让我们跳转到另一个网站，或者说一个网页的其他位置，其格式是： a href=超链接/a 其中href是一个属性值它定义了链接跳转去哪里，这个叫绝对路径 因为超链接和另一个超链接共享一行，所以超链接也是一个行内元素，更多查看 在这个例子中，“更多”一词就是一个超链接，跳转我们去了新的网页 target属性用于指定超链接打开的位置，他有两个可选值 _self 默认值，也就是不添加这个属性时的值 _blank 在新标签页打开特定网页，可以参考一下百度 a href= target=_blank超链接打开窗口/a 相对路径在文件夹中的目录，包括子目录和父目录，想要引用里面的文件就是相对路径，一般.和.为首开头，不写则默认有. .表引用当前目录里的文件 动图制作可能不太好，先将就着看吧😂，大家可以自己在地下捣鼓捣鼓 ..表示当前目录所在的上一目录 相当于连退两个目录了 扩展用法 我们可以通过 a href=#到达顶部/a 通过给标签定义id而到达某个标签的位置，id是网页中只能有一个，不能重名的特殊道具，可以参看身份证 a href=#abc到达p标签/a p id=abc我在这里p 值得注意的是id必须要要字母开头，而且在标签到达要在id名前加一个#号 更多","tags":["前端","HTML"],"categories":["前端"]},{"title":"【前端12】列表","path":"/2024/02/21/guigu-html-12/","content":"前言 本教程基于尚硅谷Web前端教程发布，你们也可以理解为这是一篇尚硅谷教程的笔记，当然这里也有我自己的一些经验总结 列表（list）我们有时会遇到去超市买东西，由于要买的东西太多记不住的情况，这个时候就需要列表 列表有三种分别是 有序列表 无序列表 定义列表 我们先来说一说无序列表 无序列表，使用ul标签创建无序列表，li来创建列表项 ulli有序列表/lili无序列表/lili定义列表/li/ul 有序列表 使用ol创建有序列表，li创建列表项 olli有序列表/lili无序列表/lili定义列表/li/ol 定义列表 定义标签，使用dl创建定义列表，dt表示定义内容，dd对文章内容表示说明 dldt列表/dtdd在html中有三种列表，分别是有序列表，无序列表和定义列表/dd/dl 要用到的话也就有序列表用的最多了，像侧边栏之类的最多，值得注意的是这三种标签都是可以相互嵌套的刚才也有提到侧边栏，这个讲CSS的时候会提到","tags":["前端","HTML"],"categories":["前端"]},{"title":"「前端已死？前端永生」","path":"/2024/02/20/qianduan/","content":"前言最近在网上冲浪的时候就发现「前端已死」的话题那是讨论非常热烈，因为我自己就在写前端，所以我也去互联网上搜索了一下相关话题，看了黄玄的演讲最后来说说我的理解 就业方面（吐槽ps：咱也不知道为什么我写博客的样式为啥非要这么标准 在2022年23年的时候我的掘金几乎就要被ChatGPT霸榜了，说那个那个GPT开源了啊，教你怎么怎么部署私人GPT了啊，这些GPT的出现带来方便同时也带来了一个问题 我们会不会被GPT所代替 我的答案是“会”但是会把不会用GPT的人裁掉，我们根本不用担心会被GPT代替，GPT是不会一下写出完美代码的，需要我们来去指导GPT，所以肯定会有越来越多公司需要“会GPT的程序员” 推荐文章-怎样更好利用GPT 前端和大前端前天看了黄玄在掘金社区的演讲这也让我对前端有了一个深刻的认识，特别是当他讲大前端的时候给它赋予了一个新的词Omni-Frontend 我们刚才一直在说前端前端，那么前端指什么 现在有很多人提到前端可能会想HTML，CSS，JavaScript，这些没错，最开始浏览器渲染这些，说白了也就是Web网 但后来革新，革新出来论坛，通讯设备巴拉巴拉的使前端也一下子复杂了起来，曾经一个人就能完成的事现在就需要会不同语言人来做 我们现在经常在网上看到一些全栈开发（ps：那人除外，真的是天赋点拉满了 前端的图景我认为把前端就目前的图景是很不错的，也不能所有的开发都让后端做了吧，世界还是需要前端的，至少还是需要图形UI的来看这张图片，左边为2DUI右边是3DUI你觉得哪边看的舒适呢？肯定是左边吧，右边让人总有一种凹凸感 随着元宇宙概念的兴起2D和3D的界限已经在被逐渐打破了 让我印象挺深的话也是我的妹妹，两岁左右，，我因为寄宿学校有两个星期不在家，有一次我回到家惊奇的发现我妹在玩手机，不是那种简单的玩，而是手机上各种图标的作用她能记住一两个的那种，我就看见过她划开手机找到了快手刷视频 未来的某一天，我相信前端会更好的","tags":["碎碎念","前端"],"categories":["碎碎念"]},{"title":"【前端11】块和行内元素","path":"/2024/02/17/guigu-html-11/","content":"前言 本教程基于尚硅谷Web前端教程发布，你们也可以理解为这是一篇尚硅谷教程的笔记，当然这里也有我自己的一些经验总结 块和行内元素什么是块元素(block element)通常网页是由一块一块的区域组成的，在网页中一般通过块元素进行布局 常见的块元素: div:主要用于内容上的划分 p:表示文本中的一个段落 h1~h6:用于区域标题 什么是行内元素(inline element)行内元素用来包裹文字，如: span:行内的组件内容，经常和div一起比较 em:起强调作用的元素 strong显示文本十分重要，一般用粗体表示 注意1).行内元素一般我们不会让它嵌套块元素，而块元素可以嵌套几乎所有的行内元素 2).p元素中是不能发任何的块元素","tags":["前端","HTML"],"categories":["前端"]},{"title":"【前端10】语义化标签","path":"/2024/02/07/guigu-html-10/","content":"前言 本教程基于尚硅谷Web前端教程发布，你们也可以理解为这是一篇尚硅谷教程的笔记，当然这里也有我自己的一些经验总结 什么是语义标签语义话标签都有它的直观含义，能够方便阅读。如： p一行语义标签旨一个段落/pspan一行语义话标签文字无特殊含义/span 如上文，这两行标签都是语义话标签，但语义各不相同使用语义标签时应该关注它的语义而不只关注它的样式 什么意思？如图，这里有两个标签h1和h2在直观的感受中我们感觉到h1是比h2大的，但这个不重要，我们可以通过CSS来让h1变得比h2小，也可以相反2变得比h1大，所以我们只关注它的语义而不关注它的样式 优势1)代码结构清晰，方便阅读，有利于团队合作开发。2)方便其他设备解析（如屏幕阅读器、盲人阅读器、移动设备）以语义的方式来渲染网页。3)有利于搜索引擎优化（SEO）。 因此我们在写页面结构时，应尽量使用有 语义的HTML 标签 那么有哪些是常见的HTML标签呢 常见的 title:页面标题，这个不用多说了吧 h1:分级标题有h1~h6，其与配合有利于搜索引擎优化。 ul:无序列表 ol:有序列表 header:网站眉页，通常包括网站标志、主导航、全站链接以及搜索框。 nav:标记导航仅对文档中重要的链接群使用。 main:页面主要内容，一个页面只能使用一次。如果是web应用，则包围其主要功能。 article定义外部的内容，其中的内容独立于文档的其余部分。 section:定义文档中的节（section、区段）。比如章节、页眉、页脚或文档中的其他部分。 aside:定义其所处内容之外的内容。如侧栏、文章的一组链接、广告、友情链接、相关产品列表等。 footer:页脚，只有当父级是body时，才是整个页面的页脚。 small:呈现小号字体效果，指定细则，输入免责声明、注解、署名、版权。 strong:与em一样用于强调文本，但相比它强调的更强一些 em:将其中的文本表示为强调的内容，表现为斜体 mark:使用黄色突出显示部分文本。 figure:规定独立的流内容（图像、图表、照片、代码等等）（默认有40px左右margin）。 更多http://t.csdnimg.cn/etL8F","tags":["前端","HTML"],"categories":["前端"]},{"title":"【前端9】meta标签","path":"/2024/02/05/guigu-html-9/","content":"前言 本教程总结自作为前端，你必须要知道的meta标签知识发布，尚硅谷的有些看不太懂了😀 回顾回顾之前先来写一下浏览器最标准的HTML格式 !doctype html html headmeta charset=UTF-8 title简单的复习/总结/title/head boby !-- boby中写网页内容，如h1这样的标签 --h1HTML中的大标题/h1boby/html 其中doctype html用来告知浏览器使用HTML5编写html和head是网页必写的标签它们都要有结束标签meat和title都是写在head里的，作用分别是编辑网页信息和设置网页标题而这篇文章就来详细说一说meat标签 meat标签概览MDN中是这样说的 HTMLmeta元素表示那些不能由其他 HTML 元相关（meta-related）元素表示的元数据信息。如：base、link、script＞、style或title 来看看meta定义的元数据类型 如果设置了 name属性，meta元素提供的是文档级别的元数据，应用于整个页面。 如果设置了http-equiv属性，meta元素则是编译指令，提供的信息与类似命名的HTTP头部相同。 如果设置了charset属性，meta元素是一个字符集声明，告诉文档使用哪种字符编码。 如果设置了itemprop属性，meta元素提供用户定义的元数据。 我们其实只需要重点了解name就好 name属性name和content一起使用，前者表示元数据要表示属性后者表示元数据的值 如果要表示网页开发的某一机构或者人就需要用到author，例如 meta name=author content=aaa@mail.abc.com description是一段简短而精确的、对页面内容的描述。以头条和taobao的description标签为例： keywords定义与页面内容相关的关键词，使用逗号分隔。某些搜索引擎在遇到这些关键字时，会用这些关键字对文档进行分类。还是以头条和taobao为例 大概就是这么多了，这边在指路一下更多教程 MDN 菜鸟教程 W3Cschool link rel=icon href=*","tags":["前端","HTML"],"categories":["前端"]},{"title":"【前端8】字符编码","path":"/2024/02/03/guigu-html-8/","content":"前言 本教程基于尚硅谷Web前端教程发布，你们也可以理解为这是一篇尚硅谷教程的笔记，当然这里也有我自己的一些经验总结 字符编码所有的数据在计算机中都是以二进制的格式储存的，汉字也不例外所以这段文字会先以二进制的方式储存到计算机，等到我们阅读是它在重新转化文字供我们阅读 编码和解码 编码：将文字转化成二进制储存到计算机的过程叫做编码 解码：将二进制重新转化为字符的过程叫做解码 举个例子：我在这里输入了一段文字文心到计算机那里“报道”就可能会变成100001110100这样的过程叫做编码 这段二进制在计算机那里待够时间了，要出去了100001110100就又会变成文心这样的过程叫做解码 既然在讲字符编码就会有字符集 编码和解码共同用的规则叫做字符集 还拿100001110100举例： 你进计算机报道和出去时用的不是一个登记册，可能这个登记册里没你名字你出去了就会呈现乱码 常见的字符集 ASCII ISO88591 GB2312 GBK UTF-8（万国码-我们在开发时用到的字符集都是UTF-8） 关于字符集（charset）的详细介绍 乱码问题有些浏览器版本低，你不给他标注它可能都不知道该用那个字符集来解析网页，这也就导致了乱码问题，那么如何规避呢？ 一般记事本都是采用UTF-8的规格我们在开发时只需要通过meta标签 !DOCTYPE html html head!-- 引号后面的字符集不能乱写，但一般都是UTF-8，除了一些特别抽风的记事本 -- meta charset=utf-8 titele字符集/titele/headboby/boby/html 到现在为止我们就得到了一个最最标准的HTML 在 /head 之前插入 link rel=icon type=image/x-icon href=ICON.ico 可以定义网站小图标","tags":["前端","HTML"],"categories":["前端"]},{"title":"【前端7】关于进制","path":"/2024/02/02/guigu-html-7/","content":"前言 本教程基于尚硅谷Web前端教程发布，你们也可以理解为这是一篇尚硅谷教程的笔记，当然这里也有我自己的一些经验总结我们 什么是进制进制（Base）是数学和计算机中的科学技术系统，常见的是我们在日常生活中的十进制，除了十进制我们还有其他常见的进制 关于进制二进制 特点：满2进1 计数：0 1 10 11 100 101 110 111 单位数字：2个（0-1） 那为什么11后面直接就是一百了呢，因为二进制里面不能出现二11到12正好又符合2进制的特点它就自动进一后变成了一百 十进制这个进制就是日常生活中用到的了我们数数都会用到 特点：满10进1 计数：0 1 2 3 4 5 6 7 8 9 10 11 12 13 14…20 计数单位：10个（0-9） 八进制这种进制很少用到 特点：满8进1 计数单位：1 2 3 4 5 6 7 10 11 12 13…17 20 单位数字：8个（0-8） 八进制同二进制一样，在计数单位中同样不能看见8，满八进一变成了10 十六进制有了十六进制那就方便了啊，一堆用二进制需要一堆0,1但到了16进制可能只需要一个计数单位就够了，所以一般显示一个二进制数字时都会转化为16进制 特点：满16进1 计数：1 2 3 4 5 6 7 8 9 a b c d e f 10 11 12…1a 1b 1c 1d 1e 1f 20… 单位数字：16个（0-f） 这时候你们就会想了，那9的下一位不应该是十吗？这时候我想说，如果下一位是10那不就又回到十进制了吗？所以找来了几个特殊的数字来完成转换 二进制的扩展所有的数据在计算机底层都是有二进制的形式保存，我们可以将内存想象为一个有多个小格子的容器，每一个格子都储存这一个1或者一个0，这样的小格子在内存中被称为1位（bit） 8bit1byte（字节）1024byte1kb（千字节）1024kb1mb（兆字节）1024mb1gb（吉字节）1024gb1tb（特字节）1024tb1pb","tags":["前端","HTML"],"categories":["前端"]},{"title":"【前端6】文档声明","path":"/2024/01/31/guigu-html-6/","content":"前言 本教程基于尚硅谷Web前端教程发布，你们也可以理解为这是一篇尚硅谷教程的笔记，当然这里也有我自己的一些经验总结 网页的基本结构看到这个大标题有的人可能会说了：“这个不是讲过了吗？不就是一些HTML，CSS，JavaScript吗”这个回答是也不是，今天来讲一下另一个结构文档声明 迭代讲文档声明之前先讲一下迭代，迭代简单来讲就是升级和优化一个版本，我们在第一篇文章中有提了，HTML出现在1991年距离今年24年已经十几年了，这期间肯定也出现了不少版本了，例如： HTML4 XHTML HTML5 如果想进一步了解他们的关系请看这篇文章。其中HTML5就是我们现在所要使用和学习的版本了 文档声明（doctype）既然要学习HTML5了那我们怎么让浏览器知道这是HTML5呢？很简单加一个文档声明符号!DOCTYPE html其中里的字母大小写都没事，都是可以识别的，所以我们的网页必写标签变成了这样： !DOCTYPE htmlhtml head title/title /head body ！--网页内容-- /body/html 文档声明要写在html之上，因为它要被第一个解析才能告诉浏览器这是HTML5","tags":["前端","HTML"],"categories":["前端"]},{"title":"【前端5】标签中的属性","path":"/2024/01/30/guigu-html-5/","content":"前言 本文基于尚硅谷Web前端基础教程发布，你也可以理解成这是一篇尚硅谷教程笔记 我们上一篇文章讲了自结束标签和注释 这次我们来说说标签中的属性 什么是属性属性是一个名值对(xy)用来指示标签中的内容如何显示，例如下面这串代码 h1你好世界HelloWorld/h1 我想要让HelloWorld和别的字符不一样我就可以添加属性: h1你好世界font color=redHelloWorld/font/h1 我在h1标签中又嵌套了一个font字体的标签规定了HelloWorld这一行字为红色，其中color是名值对的名“red“就是值属性和名值对或其他属性间要用空格就像这样font color=“red“ 属性的运用属性用来规定标签的显示，这一点在“什么是属性”中也解释到了在这里在补充几点 属性只能在开始标签或自结束标签中使用属性不能随便写，它在文档中有专门的规定的，有些属性有属性值，有些没有属性值应该用英文的“”括住","tags":["前端","HTML"],"categories":["前端"]},{"title":"聊聊我这四个月建博客的经历","path":"/2023/12/17/blog/","content":"起因那次我正在逛YT刷到了用cloudflare建设博客的帖子，对这个来了兴趣，研究了一两天诞生了我的第一个博客，从此一发不可收拾 https://blog.linexic.top/ 后来秉持着将白嫖贯彻到底的原则，又了解到了一些可以托管到GitHub静态博客 Hexo，jekyll，Hugo，vuepress，docsify等 由于设备限制（安卓）和权限问题一直没有部署成功 转机承挨汉化组让我帮其部署一个动态博客-我选定了halo 买服务器，部署halo一键完成他也对此很满意。我正好蹭了他的机子搭建了一个tyoecho的博客 心得博客是人们做做笔记，总结经验的地方，但要记住，写博客不是单纯的复制粘贴，更多的是自己的理解并叙述这样你才算懂了 博客能做的其实也很多，比如屑承就把他当作资源分享了 另外我们搭建博客的初衷是写写文章，做做笔记不是要求多好看的主题，很多人搭建了一个博客，找了好长时间的主题回头一看自己什么都没写呢，更别说知识进步了 现在市面上有好多博客系统，每个博客都有很多精美的主题，找一个看着顺眼，符合自己要求的就好 静态博客也好，动态博客也好，编写文章的时候都要用 markdown 语法，所以学好语法也是很重要的","tags":["博客"],"categories":["碎碎念"]},{"title":"【前端.4】自结束标签和注释","path":"/2023/11/24/guigu-html-4/","content":"前言 本文基于尚硅谷Web前端基础教程发布，你也可以理解成这是一篇尚硅谷教程笔记 我们已经写了这么一个网页，今天我们在它的基础上介绍自结束标签和注释 自结束标签除了一些成对的标签如h1/h1外还有不需要成对就能被识别的标签，这类标签成为自结束标签，如: imgimg/inputinput/ 等等 有的写法会在后面加一个但最新的html5规定还是第一个写法 注释!-- --在注释中的文字或代码不会被识别，在程序开发中也要养成写注释的习惯，便于别人更好的看懂你写的东西 虽然注释不会被程序识别，但是在源代码中还是可以被看到的，用于警示或告知代码 !-- 我是注释，这段代码很重要不能删 --h1哈哈哈哈/h1 像这样起了作用，负责编写你这个项目的人就知道这个是不能删的了 注释需要注意一点就是不能嵌套 !-- !-- 我是注释里的注释---- 你如果嵌套了就会在网页中露出“小尾巴”--不信你可以自己试试😀","tags":["前端","HTML"],"categories":["前端"]},{"title":"【termux】安装kali","path":"/2023/10/03/termux-kali/","content":"你需要准备的termux（官网）termux（GitHub下载）一双手，一部手机，一个键盘（不是 打开Termux，先切换pkg源 sed -i s@^\\(deb.*stable main\\)$@#\\1 deb https://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24 stable main@ $PREFIX/etc/apt/sources.list apt update apt upgrade 什么是kaliKali Linux 是专门用于渗透测试的Linux操作系统，它由BackTrack发展而来。在整合了IWHAX、WHOPPIX和Auditor这三种渗透测试专用Live Linux后，BackTrack正式改名为Kali LInux。 更详细的参考这篇文章，本文具体介绍如何安装：blog.csdn.netarticle…113239157 正文输入一下命令： apt update 这是一个主要在新系统安装之后或安装新软件包之前调用的命令，更新 将软件包升级到最新版本： apt upgrade 之后会选择yes或no，我们选择“Y“然后回车 等待一会 获得wget包信息。 apt update 要拥有共享存储，您需要授予Termux存储访问权限。不允许访问外部连接的存储设备。 termux-setup-storage 安装wget，当系统询问您是否要继续时，请按Y并回车。 apt install wget 当询问您“是否要继续”时，按Y并回车。 下载NetHunter安装文件。确保输入正确的地址。 wget -O install-nethunter-termux https://offs.ec/2MceZWr 更改权限以便可以执行文件： chmod +x install-nethunter-termux 键入以下命令以执行下载的安装文件： ./install-nethunter-termux 安装将需要一段时间，当要求删除rootfs时，输入N。 最后查看kali官网或者上网查询了解更多kali用法以上所有图源来自油管视频文档哔哩哔哩内的视频（搬运）【你的下一台Kali，何必是电脑（无Root）（小白教程）-哔哩哔哩】","tags":["kali","termux"],"categories":["Termux"]},{"title":"【前端.3】编写你的第一个网页","path":"/2023/10/03/guigu-html-3/","content":"#前言 本文基于尚硅谷Web前端基础教程发布，你也可以理解成这是一篇尚硅谷教程笔记 标签我们先来认识一下标签 标签是HTML网页组成的根元素通常由组成，标签是组成网页的基本形式我们上一篇内容写了一首诗，叫回乡偶书那个虽然也较网页但不规范，少了一些标签 这次我们加上了标签来让他更规范些 别急我们来逐步解析一下图片中的标签h1/h1 这个标签指标题，后面的是他的结束标签，h1一般都会被浏览器渲染的很大上文的“标签”就是一个h1题目 h2\t/h2 是一个二级标题，比上文h1略小一点，像这样的还有6个，在这里不一一赘述了 h1\t/h1h2\t/h2h3\t/h3h4\t/h4h5\t/h5h6\t/h6 再来几个网页必写标签html\thead title/title\t/head\tbody ！--网页内容--\t/body/html 解析html是网页必写标签，整个网页有且能只有一个 body是html的子标签，body的中文翻译是身体，这也就意味着网页的所有内容都在这个标签里写，在它的里面还有更多的子标签什么h1``p标签都写在里面 p是比h1小的，它的意思是段落，我来介绍p的这一段就是个段落 head也是html的子标签，在它的标签内只能有一个子标签那就是title，title是整个网站的名称，比如我这个网站就叫LineXic|博客.blog，那么在这个title标签里就写titleLineXic|博客.blog/title head标签里的内容在网站打开页面中看不到的比如说网站的名称 什么是子标签前面有提到子标签，那么什么是子标签呢，简单来说就是爸爸的儿子，是可以包括在里面的 一个标签可以被另一个标签包括在里面，那么那个标签就是包括它的标签的子标签。我这么说可能有点乱，大家可以自行百度","tags":["前端","HTML"],"categories":["前端"]},{"title":"GitHub上有趣/实用的项目","path":"/2023/09/22/github-1/","content":"前言GitHub是个非常有用的东西，里面不仅有程序员分享的代码还有一些好玩的东西，甚至不学计算机的人也可以用到 进入正文 1.程序员做饭指南里面记录了厨房准备等一些东西，所以是真的从头开始讲了。嗯~真的就很细时间甚至精细到秒GitHub:https://github.com/Anduin2017/HowToCook在线:https://cook.aiursoft.cn/ 2.最全中华古诗词数据库 记录了从唐宋两朝近一万四千古诗人, 接近5.5万首唐诗加26万宋诗. 两宋时期1564位词人，21050首词诗词通过JSON格式开发，更加方便数据使用 GitHub：https://github.com/chinese-poetry/chinese-poetry在线：http://shici.store/ 3.不止于 CSS CSS 奇技淫巧，在这里，都有。 本 Repo 围绕 CSSWeb动画 展开，谈一些有趣的话题，内容天马行空，想到什么说什么，不仅是为了拓宽解决问题的思路，更涉及一些容易忽视或是十分有趣的 CSS 细节。 我的一些灵感也是从这里来的 他的内容同步到他博客和issues内容可以自己探索GitHub：https://github.com/chokcoco/iCSS 4.网页小组件版本的石蒜模拟器 引入模块就可以使用 !-- https://cdn.jsdelivr.net/npm/sakana-widget@2.5.0/lib/sakana.min.css --!-- https://cdn.jsdelivr.net/npm/sakana-widget@2.5.0/lib/sakana.min.js --!-- https://cdnjs.cloudflare.com/ajax/libs/sakana-widget/2.5.0/sakana.min.css --!-- https://cdnjs.cloudflare.com/ajax/libs/sakana-widget/2.5.0/sakana.min.js --link rel=stylesheet href=https://cdn.jsdelivr.net/npm/sakana-widget@2.5.0/lib/sakana.min.css/div id=sakana-widget/divscript＞ function initSakanaWidget() new SakanaWidget().mount(#sakana-widget); /script＞script async onload=initSakanaWidget() src=https://cdn.jsdelivr.net/npm/sakana-widget@2.5.0/lib/sakana.min.js/script＞ 预览 GitHub：https://github.com/dsrkafuu/sakana-widget/blob/main/README.zh.md在线：https://github.dsrkafuu.net/sakana-widget/ 5.程序员工作中常见的英语词汇其实这个我感觉我们这样的学生也可以用得到的，把它当一个学习英语资料卡就好 GitHub：https://github.com/Wei-Xia/most-frequent-technology-english-words在线：https://learn-english.dev/","tags":["GitHub"],"categories":["GitHub"]},{"title":"【前端.2】HTML简介","path":"/2023/09/03/guigu-html-2/","content":"前言 本教程基于尚硅谷Web前端教程发布，你们也可以理解为这是一篇尚硅谷教程的笔记，当然这里也有我自己的一些经验总结 什么是HTML？ HTML（Hypertext Markup Langguage）是一个超文本编辑语言 它负责网页三要素中的结构 HTML使用标签的形式来识别网页中不同的组成部分 所谓超文本指的是超链接使用超链接可以让我们从一个页面跳转到另一个页面 什么是文本？文本指的是你使用记事本编辑的内容除此之外都不叫文本，文本不可以插入图片，视频或音频例如下面的图片 这个图片中我们使用文本编辑器（记事本）编写了回乡偶书一文，这就是一个文本 如何快捷打开记事本？在电脑任务栏（右下角）点击搜索Notepad 如何使用浏览器打开？我们打开了记事本，在里面随便写点什么东西然后Ctrl+S打开文件管理器 为刚才你在记事本里写的文本起一个文件名，HTML的文件名要改成xxx.html名字是可以随便的，.html不能更改，这边建议统一成index.html 把文件存储到桌面看到文件变成了浏览器的图标 我们点开它发现这里面的内容就是这样的 和我们先前的内容对比一下，左侧就叫做这个网页的源码，右侧则是浏览器渲染之后的效果 总结 打开记事本Notepad Ctrl+S打开文件保存到桌面重命名index.html 浏览器双击打开","tags":["前端","HTML"],"categories":["前端"]},{"title":"【前端.1】网页简史","path":"/2023/09/02/guigu-html-1/","content":"前言 本教程基于尚硅谷Web前端教程发布，你们也可以理解为这是一篇尚硅谷教程的笔记，当然这里也有我自己的一些经验总结 历史 蒂姆-伯纳斯-李爵士发明了万维网 1991年8月6日，世界上第一个服务网和网站在欧洲核子研究中心上线 点击查看第一个网站 什么是网页网页是浏览器通过渲染所呈现的页面，你们看的我这个博客就是一个网页，网页就是你打开网站后浏览器所第一给你呈现的页面 这个就是一个网站的页面，在一个页面里我们也可以通过鼠标右键来查看网页源代码 看，打开后就是这个样子 万维网联盟的创立（W3C）背景 早期的浏览器所渲染的网页各不相同，经常会有的时候这个代码在这个浏览器就能成功渲染显示出来，而在另一个浏览器就显示不出来了 为了解决这个问题，伯纳斯李在1994年创立了W3C来制定一个统一网页编写标准，目前我们所有访问的页面都根据这个标准来写 W3C在中国也有网站，感兴趣的可以点这里访问 网页的结构根据W3C标准，一个网页主要由三部分组成结构，表现，行为分别对应HTML，CSS，JavaScript HTML用于页面结构 CSS用于控制页面中元素样式 JavaScript用于影响用户操作 这些我有时间了或者下篇博客中都会讲到，现在只是先理解一下这些概念 因为目前还没有评论系统，有问题发邮箱，感谢谅解","tags":["前端","HTML"],"categories":["前端"]},{"title":"关于我","path":"/about/index.html","content":"这里是LineXic书屋，欢迎查看书屋，我是站长LineXic😀👆 我是LineXic，是一名高中的学生平时喜欢打羽毛球🏸和跑步🏃放假的时候喜欢在网络上瞎折腾 机遇巧合之下我喜欢上了编码并且投入的时间越来越长以至于了解的更多了，学到的多了也就想找个地方把它记录下来，后来我就了解到了GitHub GitHub是一个储存代码的地方我可以把我写到的放在里面，通过注释的方法来帮我了解这串代码到底怎么用，怎么讲，只是后来我接触到了GitHub pages了解到了jekyll等静态网站搭建的博客，从此就开始了折腾之旅"},{"title":"友链 & 朋友们","path":"/friends/index.html","content":"朋友们"}]